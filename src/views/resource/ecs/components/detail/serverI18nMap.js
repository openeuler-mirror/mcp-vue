
let serveri18nMap = {
    serverVirtaulTaskGrid_type: 'ksvd.task.head.type',
    serverVirtaulTaskGrid_createTime: 'ksvd.task.head.create_time',
    serverVirtaulTaskGrid_startTime: 'ksvd.task.head.start_time',
    serverVirtaulTaskGrid_finishTime: 'ksvd.task.head.finish_time',
    serverVirtaulTaskGrid_action: 'ksvd.task.head.action',
    serverVirtaulTaskGrid_objName: 'ksvd.task.head.objName',
    serverVirtaulTaskGrid_operUser: 'ksvd.task.head.operUser',
    serverVirtaulTaskGrid_status: 'ksvd.task.head.status',
    serverVirtaulTaskGrid_reason: 'ksvd.task.head.reason',
    serverVirtaulTaskGrid_detail: 'ksvd.task.head.detail',
    showAllTask: 'serverVirutal.deskTop.showAllTask',
    allStatus: 'serverVirutal.deskTop.allStatus',
    doingStatus: 'serverVirutal.deskTop.doingStatus',
    failStatus: 'serverVirutal.deskTop.failStatus',
    successStatus: 'serverVirutal.deskTop.successStatus',
    completeStatus: 'serverVirutal.deskTop.completeStatus',
    taskProgress: 'serverVirutal.deskTop.taskProgress',

    servervirtualEdit: 'ksvd.task.action.servervirtual_servervirtauledit',
    serverVirtaulHostMigrate: 'ksvd.task.action.servervirtual_servervirtaulhostmigrate',
    serverVirtaulHostStorageMigrate: 'ksvd.task.action.servervirtual_servervirtaulhoststoragemigrate',
    servervirtualVolMigrate: 'ksvd.task.action.servervirtual_servervirtualmigrate',
    servervirtualForceReboot: 'serverVirtualizationService.ForceReboot',
    servervirtualReboot: 'serverVirtualizationService.Reboot',
    servervirtualPowerOn: 'serverVirtualizationService.PowerOn',
    servervirtualShutDown: 'serverVirtualizationService.ShutDown',
    servervirtualResume: 'serverVirtualizationService.Resume',
    servervirtualPause: 'serverVirtualizationService.Suspend',
    servervirtualForceShutDown: 'serverVirtualizationService.ForceShutDown',
    servervirtualDelete: 'serverVirtualizationService.HardDelete',
    servervirtualDeleteSoft: 'serverVirtualizationService.DeleteSoft',
    servervirtualClone: 'serverVirtualizationService.fullClone',
    servervirtualCloneLink: 'serverVirtualizationService.linkClone',
    servervirtualCreate: 'serverVirtualizationService.createVirtualService',
    servervirtualCreateByTemplate: 'serverVirtualizationService.createVirtualServiceByTemplate',
    servervirtualExport: 'serverVirtualizationService.setVmExport',
    servervirtualImport: 'serverVirtualizationService.importTemplateImage',
    servervirtualCreateServerSnap: 'server.vm.snapshot.create.memSnapshot',
    servervirtualCreateNoMemServerSnap: 'server.vm.snapshot.create.noMemSnapshot',
    servervirtualSnapshotDelete: 'ksvd.task.action.servervirtual_servervirtualdeletesnapshot',
    servervirtualSnapshotApply: 'ksvd.task.action.servervirtual_servervirtualapplysnapshot',
    servervirtualBatchApply: 'ksvd.task.action.servervirtual_serverbatchvirtualapplysnapshot',
    servervirtualBatchCreateSnap: 'ksvd.task.action.servervirtual_serverbatchvirtualcreatesnapshot',
    servervirtualCreateBackUp: 'ksvd.task.action.servervirtual_servervirtaulbackup',
    servervirtualRecoverBackUp: 'ksvd.task.action.servervirtual_servervirtaulrecoverbackup',
    servervirtualDeleteBackUp: 'ksvd.task.action.servervirtual_servervirtauldeletebackup',
    servervirtualDiskCopy: 'ksvd.task.action.servervirtual_servervirtauldiskcopy',

    aliasName: 'serverVirtualizationService.edit.vmName',
    description: 'serverVirtualizationService.Description',
    selectCluster: 'serverVirtualizationService.Cluster',
    vcpuSocket: 'serverVirtualizationService.edit.vcpuSocket',
    vcpuCores: 'serverVirtualizationService.edit.vcpuCores',
    cpuMode: 'serverVirtualizationService.edit.cpuMode',
    schedulingPriority: 'serverVirtualizationService.cpu.schedulingPriority',
    cpuLimit: 'serverVirtualizationService.cpu.limit',

    numaConfig: 'serverVirtualizationService.edit.numaConfig',
    memory: 'serverVirtualizationService.edit.memory',
    memoryHugeConfig: 'serverVirtualizationService.edit.memoryHugeConfig',
    memoryBubbleConfig: 'serverVirtualizationService.memory.recovery',

    addDisk: 'serverVirtualizationService.edit.addDisk',
    delDisk: 'serverVirtualizationService.edit.delDisk',
    diskCapacity: 'serverVirtualizationService.Disk',
    targetBus: 'serverVirtualizationService.DiskType',
    cacheType: 'serverVirtualizationService.edit.cacheMode',
    provisionType: 'serverVirtualizationService.edit.provisionType',
    readIOLimit: 'serverVirtualizationService.edit.disk.ioRange',
    writeIOLimit: 'serverVirtualizationService.edit.disk.ioRange',
    readIOPSLimit: 'serverVirtualizationService.edit.disk.iopsRange',
    writeIOPSLimit: 'serverVirtualizationService.edit.disk.iopsRange',

    addInterface: 'serverVirtualizationService.edit.addInterface',
    delInterface: 'serverVirtualizationService.edit.delInterface',
    interfaceType: 'serverVirtualizationService.InterfaceType',
    modeltype: 'serverVirtualizationService.edit.NetworkCardType',
    poolName: 'serverVirtualizationService.edit.macAddressPool',
    virtualSwitch: 'serverVirtualizationService.edit.virtualSwitch',
    portGroup: 'serverVirtualizationService.edit.portGroup',
    ipAddress: 'serverVirtualizationService.edit.ipAddress',
    mac: 'serverVirtualizationService.edit.macAddress',
    queueCount: 'serverVirtualizationService.queueCount',
    mtuCount: 'serverVirtualizationService.mtuCount',
    hotDrawing: 'serverVirtualizationService.hotDrawing',

    addIso: 'serverVirtualizationService.edit.addIso',
    delIso: 'serverVirtualizationService.edit.delIso',
    sourceFile: 'serverVirtualizationService.edit.imageFile',

    editDisk: 'serverVirtualizationService.edit.editDisk',
    editInterface: 'serverVirtualizationService.edit.editInterface',
    editIso: 'serverVirtualizationService.edit.editIso',
    editUsb: 'serverVirtualizationService.edit.editUsb',

    graphicsCard: 'serverVirtualizationService.edit.graphicsCardType',
    mouseType: 'serverVirtualizationService.edit.mouseType',
    biosSwitch: 'serverVirtualizationService.edit.bios',
    biosFile: 'serverVirtualizationService.edit.biosFile',
    biosWaitTime: 'serverVirtualizationService.edit.biosWaitTime',

    addUsb: 'serverVirtualizationService.edit.addUsb',
    delUsb: 'serverVirtualizationService.edit.delUsb',
    hostId: 'serverVirtualizationService.edit.usbHost',
    usbId: 'serverVirtualizationService.edit.vmUsb',

    vmBluescreen: 'serverVirtualizationService.edit.vmHA',
    uniqbVmHA: 'serverVirtualizationService.edit.hostHA',
    enableCpuDynamic: 'serverVirutal.dynamicPolicy.enableCpuDynamic',
    enableMemDynamic: 'serverVirutal.dynamicPolicy.enableMemDynamic',
    aotuMigrateSwitch: 'serverVirtualizationService.drs.aotuMigrateSwitch',
    followHostStartAuto: 'serverVirtualizationService.edit.followHostStartAuto',
    bootOrder: 'serverVirtualizationService.edit.bootOrder',
    remoteOpen: 'serverVirtualizationService.edit.remoteOpen',
    remotePassword: 'serverVirtualizationService.edit.remotePassword',
    wholeness: 'serverVirtualizationService.wholeness',
    existedTime: 'serverVirtualizationService.edit.existedTime',
    noTime: 'serverVirtualizationService.edit.noTime',
    customizeTime: 'serverVirtualizationService.edit.customizeTime',

    //values
    HOST_PASSTHROUGH: 'serverVirtualizationService.edit.host-passthrough',
    HOST_MODEL: 'serverVirtualizationService.edit.host-model',
    CUSTOM: 'serverVirtualizationService.edit.custom',
    schedulingPriorityLow: 'serverVirtualizationService.cpu.schedulingPriorityLow',
    schedulingPriorityMiddle: 'serverVirtualizationService.cpu.schedulingPriorityMiddle',
    schedulingPriorityHigh: 'serverVirtualizationService.cpu.schedulingPriorityHigh',

    graphicsCardQXL: 'serverVirtualizationService.edit.graphicsCardQXL',
    graphicsCardVGA: 'serverVirtualizationService.edit.graphicsCardVGA',
    graphicsCardCirrus: 'serverVirtualizationService.edit.graphicsCardCirrus',
    virtio: 'serverVirtualizationService.edit.virtio',

    legacy: 'server.virtual.edit.machine.bios.type.legacy',
    uefi: 'server.virtual.edit.machine.bios.type.uefi',
    userUpload: 'server.virtual.edit.machine.bios.type.userUpload',

    noConfig: 'serverVirtualizationService.noConfig',
    reOpen: 'serverVirtualizationService.reOpen',
    byOther: 'serverVirtualizationService.byOther',

    close: 'serverVirtualizationService.close',
    open: 'serverVirtualizationService.open',
}
export {
    serveri18nMap
}